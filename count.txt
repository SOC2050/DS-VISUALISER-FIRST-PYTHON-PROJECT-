#include <stdio.h>
#include <stdlib.h>

void countSort(int arr[], int n, int max) {
    int i, j;
    int* count = (int*)malloc((max + 1) * sizeof(int));

    // Initialize count array with zeros
    for (i = 0; i <= max; i++) {
        count[i] = 0;
    }

    // Store the count of each element in the input array
    for (i = 0; i < n; i++) {
        count[arr[i]]++;
    }

    // Modify the count array to store the actual position of each element in the output array
    for (i = 1; i <= max; i++) {
        count[i] += count[i - 1];
    }

    int* output = (int*)malloc(n * sizeof(int));

    // Build the output array
    for (i = n - 1; i >= 0; i--) {
        output[count[arr[i]] - 1] = arr[i];
        count[arr[i]]--;
    }

    // Copy the sorted elements back to the original array
    for (i = 0; i < n; i++) {
        arr[i] = output[i];
    }

    free(count);
    free(output);
}

int main() {
    int arr[] = {4, 2, 2, 8, 3, 3, 1};
    int n = sizeof(arr) / sizeof(arr[0]);
    int i, max = 8;

    printf("Array before sorting: ");
    for (i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    countSort(arr, n, max);

    printf("Array after sorting: ");
    for (i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    return 0;
}
