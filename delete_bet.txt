#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};

void display(struct Node* head) {
    struct Node* current = head;
    while (current != NULL) {
        printf("%d -> ", current->data);
        current = current->next;
    }
    printf("NULL\n");
}

void delete_in_between(struct Node** head, int position) {
    if (*head == NULL) {
        printf("List is empty.\n");
        return;
    }

    struct Node* current = *head;
    struct Node* prev = NULL;
    int count = 0;

    while (current != NULL && count < position) {
        prev = current;
        current = current->next;
        count++;
    }

    if (current == NULL) {
        printf("Invalid position.\n");
        return;
    }

    if (prev == NULL) {
        *head = current->next;
    } else {
        prev->next = current->next;
    }

    free(current);
}

int main() {
    struct Node* head = NULL;

    // Inserting elements in the linked list
    struct Node* node1 = (struct Node*)malloc(sizeof(struct Node));
    node1->data = 1;
    node1->next = NULL;
    head = node1;

    struct Node* node2 = (struct Node*)malloc(sizeof(struct Node));
    node2->data = 2;
    node2->next = NULL;
    node1->next = node2;

    struct Node* node3 = (struct Node*)malloc(sizeof(struct Node));
    node3->data = 3;
    node3->next = NULL;
    node2->next = node3;

    struct Node* node4 = (struct Node*)malloc(sizeof(struct Node));
    node4->data = 4;
    node4->next = NULL;
    node3->next = node4;

    // Displaying the initial linked list
    printf("Initial linked list: ");
    display(head);

    // Deleting a node in between the linked list
    int position = 2;
    delete_in_between(&head, position);

    // Displaying the updated linked list
    printf("Updated linked list: ");
    display(head);

    return 0;
}
